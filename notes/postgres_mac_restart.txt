This problem usually shows up with one or both of these errors:

(while starting via "brew services")
Error: Failure while executing; `/bin/launchctl bootstrap gui/501
  /Users/brett/Library/LaunchAgents/homebrew.mxcl.postgresql@13.plist` exited with 37.

(while trying to run psql)
psql: error: could not connect to server: No such file or directory
        Is the server running locally and accepting
        connections on Unix domain socket "/tmp/.s.PGSQL.5432"?

Typical problem is that postgresql didn't shut down properly last time and there's a PID file lying
around and blocking a normal restart. Just gotta find that PID file and delete it.

It might be in one of a few different locations because of different postgres installations, perhaps
all through homebrew or perhaps through different mechanisms: pre-installed, Postgres.app, homebrew,
MacPorts, whatever. Homebrew is most likely, so track down what homebrew formula is installed using
"brew list". That will inform where the file might be found, and the brew command to restart.

The following will assume an installed homebrew formula of "postgresql@13", but adjust to whatever
you find.

The PID file should be called postmaster.pid and will usually be in one of these locations:
  /usr/local/var/postgres/postmaster.pid
  /usr/local/var/postgresql@13/postmaster.pid

Search for postmaster.pid under /usr/local/var, /usr/local, just /usr, or perhaps somewhere under
/opt, then delete it.

After deleting, run:
  brew services restart postgresql@13
  (or whatever the brew formula is, after the "restart")

These might come in handy also:
  brew services stop postgresql@13
  brew services start postgresql@13

--------------------------------------------------------------------------------

A little more context:

launchd on Mac is a service manager like init.d on a Linux system. launchd refers to daemons run by
non-root users as "agents", and starts them on user login instead of bootup. So "service", "daemon",
and "agent" are all basically the same thing. Config for launchd is found in "property list" XML
files, with .plist extensions, stored in LaunchAgents and LaunchDaemons directories in a few
locations on a Mac system, including ~/Library/LaunchAgents, where the postgres plist is found.

launchctl is the command-line tool for administering launchd. Using it you can "load" plist files to
register a service with launchd, and "start" the service if it doesn't auto-start on load (depending
on the config in the file), as well as their opposites.

Learn all about launchd at https://www.launchd.info/.

"brew services" is a wrapper for launchctl. A service's plist file comes with its homebrew package,
and "brew services" runs the launchctl commands for loading, starting, and stopping it behind the
scenes. So theoretically, "brew services start|stop|restart" *should* be all you need once the stale
PID file is deleted.

Sometimes you'll come across the command pg_ctl, which is a postgres-specific utility for
controlling the daemon, and kind of a low-level thing for setups where postgres isn't getting
started by any sort of service manager like launchd or initd. On a Mac, homebrew or launchd are
likely the way to go, so you shouldn't need pg_ctl.
